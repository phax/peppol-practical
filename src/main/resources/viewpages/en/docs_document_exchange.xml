<!--

    Copyright (C) 2014-2017 Philip Helger (www.helger.com)
    philip[at]helger[dot]com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<p>
  This article explains one of the biggest mysteries in PEPPOL: how does the 
  document exchange work and what roles does the SML (Service Metadata Locator) 
  play in it.
</p>

<h2>Prerequisites</h2>

<p>
  To start a document exchange in PEPPOL, you need to have the following information
  before you can start submitting anything:
  <ul>
    <li>The <strong>PEPPOL Participant Identifier</strong> (PPID) of the recipient (currently this must be exchanged out-of-band but with the upcoming PEPPOL Directory there is help in sight)</li>
    <li>On which <strong>SML</strong> is the PPID registered (production SML or test SMK)</li>
    <li>The <strong>document type ID</strong> and the <strong>process ID</strong> to be used</li>
    <li>The <strong>business document to be exchanged</strong> is of course needed</li>
  </ul>
</p>

<h2>How it works</h2>

<p>
  Lets start at the beginning. The first thing you need to do, is to find the SMP where the
  document receiver has registered its endpoints. Therefore the PPID and the SML information are required.
  <ul>
    <li>
      PPID with scheme <code>iso6523-actorid-upis</code> and value <code>9915:test</code>
    </li>
    <li>
      SML to use = DG DIGIT SMK (= the Test SML). The DNS zone for the SMK is 
      <code>acc.edelivery.tech.ec.europa.eu.</code>
    </li>
  </ul>
</p>

<ol>
  <li>
    <p>
      First thing that happens, is that the dynamic URL is assembled.
      The algorithm that is used is the following:
    </p>
    <p>
      <code>"http://B-" + hexstring(md5(lowercase(ID-VALUE))) + "." + ID-SCHEME + "." + SML-ZONE-NAME</code>
    </p>
    <p>
      <code>ID-SCHEME</code> and <code>ID-VALUE</code> are taken from the PPID 
      and the <code>SML-ZONE-NAME</code> is taken from the SMP.
      That implies that a different identifier (as good as MD5 can do it) will create a different
      DNS name.
    </p>
    <p>
      For the identifier <code>iso6523-actorid-upis::9915:test</code> and the <code>SMK</code> the created URL is
      <code>http://B-85008b8279e07ab0392da75fa55856a2.iso6523-actorid-upis.acc.edelivery.tech.ec.europa.eu</code>
    </p>
  </li>
  <li>
    <p>
      This URL is resolved via the Domain Name System (DNS) to the IP address <code>85.158.224.220</code> which 
      is the IP of the server <code>http://test-infra.peppol.at</code>.
      This is exactly the server name that was used when registering the SMP to the SMK.
      See below for details on what happens on SMP to SML registration.
    </p>
  </li>
  <li>
    <p>
      So the <code>B-8500....</code> URL is already the URL to the SMP and all that is left to do, is to append
      the participant identifier to the URL to get all supported document types.
      For the example the URL would be 
      <code>http://B-85008b8279e07ab0392da75fa55856a2.iso6523-actorid-upis.acc.edelivery.tech.ec.europa.eu/iso6523-actorid-upis::9915:test</code>.
      The reason why the participant identifier needs to be appended again is solely than an SMP can host multiple
      participants on the same server.
    </p>
    <p>
      To see that this is just a DNS forward you can compare the results of
      <code>http://B-85008b8279e07ab0392da75fa55856a2.iso6523-actorid-upis.acc.edelivery.tech.ec.europa.eu/iso6523-actorid-upis::9915:test</code>
      and
      <code>http://test-infra.peppol.at/iso6523-actorid-upis::9915:test</code>
      and see that there is no difference in the responses.
    </p>
  </li>
  <li>
    <p>
      Now that the SMP URL is known, the SMP query with the document type 
      (following the schema <code>http://<i>smp.url</i>/<i>participant</i>/services/<i>documenttype</i></code>)
      can be performed).
      The resulting signed document must be parsed so that the endpoint
      matching the desired process ID and transport protocol can be retrieved.
      This is finally the URL to which the business document is to be send. 
    </p>
    <p>
      All the above mentioned steps are usually handled by the SMP client software.
    </p>
  </li>
  <li>
    <p>
      The last step is the transmission of the business document to the endpoint URL
      determined in the previous step.
      Additionally components like special validation services etc. may be used depending 
      on the effective setup but I wont cover them in this article.
    </p>
    <p>  
      This is the task of the AccessPoint client.
    </p>
  </li>
</ol>

<p>
  And how was the SML involved in all of this? Not at all!
  Only the Domain Name System is queried upon a document exchange.
  And if the DNS fails, there are more severe issues than not being able to send documents via PEPPOL.
  And that is one of the intelligent parts of the PEPPOL network:
  no central single point of failure that can stop the document exchange for everybody. 
</p>

<h2>Appendix - SMP/SML interaction</h2>

<p>
  The SMP has the following interactions with the SML and is responsible for telling the SML what to do.
</p>

<ol>
  <li>
    <p>
      When an SMP enters the PEPPOL network, it needs to be registered to the SML.
      This is where the SMP-ID comes into play.
      For the registration the SML creates a DNS entry with the name 
      <code>SMP-ID + ".publisher." + SML-ZONE-NAME</code>
      which is a CNAME entry (alias) to the hostname provided for registration.
      This is the so called <strong>publisher</strong> entry.
    </p>
    <p>
      Example: an SMP with SMP-ID <code>TEST-SMP</code> and host name <code>smp.example.org</code>
      should be registered at the SMK (with DNS zone name <code>acc.edelivery.tech.ec.europa.eu.</code>).
      Therefore the DNS name <code>TEST-SMP.publisher.acc.edelivery.tech.ec.europa.eu</code> pointing 
      to <code>smp.example.org</code> is created. 
    </p>
    <p>
      Note: this publisher entry is the reason, why the SMP-ID can only used a limited character set.
    </p>
  </li>
  <li>
    <p>
      If the host name of an SMP entry changes, the SMP-ID and the new host name are send to the
      SML and the SML updates the publisher entry in the DNS. That means that all existing
      participant DNS entries (see below) don't need to be modified.  
    </p>
  </li>
  <li>
    <p>
      When an SMP leaves the PEPPOL network, the publisher entry and all entries referencing
      this publisher entry will be removed.
    </p>
  </li>
  <li>
    <p>
      Each time a service group (participant) is added to an SMP that is registered to an SML,
      the SML creates a CNAME entry (according to the algorithm explained above - "B-...")
      that in turn points to the publisher entry.
    </p>
    <p>
      So upon name resolution, the service group DNS entry is resolved to the publisher entry
      which in turn is resolved to the SMP host name.
    </p>
    <p>
      <strong>Note:</strong> the latest version of the SML not only creates a CNAME record for
      each participant but also a <a href="https://en.wikipedia.org/wiki/NAPTR_record" target="_blank">DNS NAPTR</a>
      record pointing to the publisher entry.
      For the NAPTR records, the e-SENS algorithm for creating DNS names is used instead:
      <code>strip-trailing(base32(sha256(lowercase(ID-VALUE))), "=") + "." + ID-SCHEME + "." + SML-ZONE-NAME</code>
    </p>
  </li>
</ol>
