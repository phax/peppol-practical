<!--

    Copyright (C) 2014-2024 Philip Helger (www.helger.com)
    philip[at]helger[dot]com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<p>
  This page explains how to setup a Peppol AP from scratch.
  AP is the abbreviation for <em>Access Point</em> which is the technical endpoint for
  sending and receiving business documents.
  See the <a href="/public/menuitem-docs-peppol-dict">Dictionary</a> for more abbreviations.
</p>

<p>
  Since 2020-02-01 AS4 is the mandatory transport protocol in the Peppol eDelivery network.<br/>
</p>

<p>
  There are a few known Open Source possibilities (I'm aware of) on how to build/run a Peppol AccessPoint (in alphabetical order).
  <ul>
    <li>
      <a href="http://holodeck-b2b.org/">Holodeck B2B</a> is also a prebuild solution. 
      It is an Open Source project written in Java.
      It supports AS4 and comes with commercial support.
      Supports for Peppol dynamic discovery is not Open Source.
    </li>
    <li>
      <a href="https://github.com/difi/oxalis">Oxalis</a> is a prebuild solution.
      It is an Open Source project written in Java.
      It supports Peppol specific AS4 but comes without professional support.
      Especially the interoperability of the AS4 implementation is not good as they passed the 
      <a href="https://ec.europa.eu/digital-building-blocks/sites/display/DIGITAL/eDelivery+AS4+conformant+solutions">EC conformance test</a> only partially.  
    </li>
    <li>
      The solution described in this document is <a href="https://github.com/phax/phase4">phase4</a> 
      as the AS4 communication channel for sending and receiving Peppol AS4 messages.<br/>
      phase4 is a shared library for AS4 message exchange and can hence be used in versatile scenarios. 
      phase4 is already used by a huge amount of users around the globe - a few of them are listed at 
      <a href="https://github.com/phax/phase4/wiki/Known-Users">https://github.com/phax/phase4/wiki/Known-Users</a>. 
    </li>
  </ul>
</p>

<div class="card card-default">
  <div class="card-header">
    Table of contents
  </div>
  <div class="card-body">
    <ol>
      <li><a href="#prerequisites">Prerequisites</a></li>
      <li><a href="#as4">AS4 specifics</a>
        <ol>
          <li><a href="#as4messagestructure">AS4 Message structure</a></li>
          <li><a href="#as4receiver">AS4 AccessPoint receiver</a></li>
          <li><a href="#as4sender">AS4 AccessPoint sender</a></li>
        </ol>
      </li>
    </ol>
  </div>
</div>

<a name="prerequisites"></a>
<h2>Prerequisites</h2>
<p>
  Before you can start you need to have the following information in place:
</p>
<ol>
  <li>As the very first step you need to sign the Peppol agreements (previously called TIAs - Transport Infrastructure Agreements) with 
      your Peppol Authority <a href="https://peppol.org/join/?membership">OpenPeppol AISBL</a>.</li>
  <li>Afterwards you need to apply for an <em>AP certificate</em> at OpenPeppol. 
      This certificate is required to run the AP.</li>
  <li>At least one of the default Peppol BIS (processes) must be implemented.
      A list of
      <a href="https://peppol.eu/downloads/post-award/">all available BISs</a>
      is available on the Peppol website.  
  </li>
  <li>You should have a look at the 
      <a href="https://docs.peppol.eu/edelivery/as4/specification/">official Peppol AS4 profile</a>.
  </li>
  <li>You should have a look at the 
      <a href="https://peppol.eu/downloads/the-peppol-edelivery-network-specifications/">official Peppol Envelope specification</a>
      (SBDH).
  </li>
  <li>You should be familiar with Java</li>
  <li>Basic knowledge about Apache Tomcat (and optionally a reverse proxy) should be present</li>
</ol>

<a name="as4"></a>
<h2>AS4 as a transport protocol (mandatory)</h2>

<p>
  The <a href="https://docs.peppol.eu/edelivery/as4/specification/">Peppol AS4 profile</a> 
  is based on the 
  <a href="https://ec.europa.eu/digital-building-blocks/sites/display/DIGITAL/eDelivery+AS4+-+1.14">CEF eDelivery AS4 1.14 profile</a>
  which in turn is a (non-perfect) profile of the
  <a href="https://docs.oasis-open.org/ebxml-msg/ebms/v3.0/profiles/AS4-profile/v1.0/">OASIS AS4 profile v1.0</a>
  which (you guessed it) is a profile of the
  <a href="https://docs.oasis-open.org/ebxml-msg/ebms/v3.0/core/os/">OASIS ebXML Messaging V3</a>.
</p>

<a name="as4messagestructure"></a>
<h3>AS4 Message structure</h3>

<p>
  Peppol adds specific limitations on the usage of AS4.
  AS4 Messages MUST be signed and encrypted.
  AS4 messages MUST have exactly one encrypted payload which MUST be a Standard Business Document (SBD).
  Peppol AS4 message MUST use the MIME encoding for message transmission. 
</p>

<p>
  <img src="../imgs/as4-message-structure.png" alt="Peppol AS4 message structure" />
</p>

<a name="as4receiver"></a>
<h3>AS4 AccessPoint receiver</h3>

<p>
  See the <a href="https://github.com/phax/phase4/wiki/Profile-Peppol#subproject-phase4-peppol-servlet">official phase4 documentation</a> on phase4-peppol-servlet for details.
</p>

<a name="as4sender"></a>
<h3>AS4 AccessPoint sender</h3>

<p>
  See the <a href="https://github.com/phax/phase4/wiki/Profile-Peppol#subproject-phase4-peppol-client">official phase4 documentation</a> on phase4-peppol-client for details.
</p>
